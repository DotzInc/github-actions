name: 'Sonarqube .NET Scanner'
description: 'Quality Gate Sonarqube for .NET projects'

inputs:
  sonar-verbose:
    required: false
    type: boolean
    default: false
  sonar-sources:
    required: false
    type: string
    default: "."
  sonar-sources-tests:
    required: false
    type: string
    default: "**/coverage.opencover.xml,.**/*.trx"
  sonar-report-paths:
    required: false
    type: string
    default: "coverage.xml"
  sonar-source-encoding:
    required: false
    type: string
    default: "UTF-8"
  sonar-exclusions:
    required: false
    type: string
    default: "**/bin/**,**/obj/**,**/Migrations/**,**/*.py"
  sonar-host-url:
    required: true
    type: string
  sonar-api-token:
    required: true
    type: string
  sonar-token:
    required: true
    type: string
  sonar-project-key:
    required: true
    type: string
  sonar-timeout:
    required: false
    type: string
    default: "300"
  sonar-dotnet-version:
    required: false
    type: string
    default: "8.0.x"

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v5.2.0
      continue-on-error: true
      with:
        args: >
          -Dsonar.sources=.
          -Dsonar.projectKey=core-accounts
          -Dsonar.projectName=CoreAccounts
          -Dsonar.cs.opencover.reportsPaths=coverage.xml
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONAR_HOST_URL: ${{ inputs.sonar-host-url }}

    - name: Check SonarQube Quality Gate Status
      id: sonarqube-status
      shell: bash
      continue-on-error: true
      run: ${{ github.action_path }}/sonarqube-status.sh
      env:
        SONAR_PROJECT_KEY: ${{ inputs.sonar-project-key }}
        SONAR_TOKEN: ${{ inputs.sonar-api-token }}
        SONAR_HOST_URL: ${{ inputs.sonar-host-url }}

    - name: Get Coverage
      shell: bash
      id: coverage-calc
      if: steps.sonarqube-status.outputs.status == 'OK'
      continue-on-error: true
      run: ${{ github.action_path }}/coverage-calc.sh

    - name: Update Quality Gates Sonarqube
      shell: bash
      id: quality-gates-sonarqube
      if: steps.sonarqube-status.outputs.status == 'OK'
      continue-on-error: true
      run: ${{ github.action_path }}/quality-gates-sonarqube.sh
      env:
        SONAR_PROJECT_KEY: ${{ inputs.sonar-project-key }}
        SONAR_TOKEN: ${{ inputs.sonar-api-token }}
        SONAR_HOST_URL: ${{ inputs.sonar-host-url }}
        LEGACY_COV_NUM: ${{ steps.coverage-calc.outputs.coverage }}
